會寫這個是因為2024/7/3寫到codeforce中C. Train and Queries
https://codeforces.com/contest/1702/problem/C
了解Hash map在 C++中的用法
Hash map是基於哈希表的數據結構，用於實現key -> value 的存儲及查找，平均時間複雜度為O(1)，
比起一開始用map快速許多，map平均時間複雜度為O(log(n))。
但是C++並未提供Hash map的函數做使用，我們要如何實作呢?


因為哈希函數將鍵映射到表中的一個索引位置，所以插入操作只需常數時間。
查找（Lookup）：

平均時間複雜度為O(1)。
使用哈希函數計算鍵的索引位置，並在該位置檢查是否存在該鍵。
刪除（Deletion）：

平均時間複雜度為O(1)。
與查找操作類似，找到鍵的位置後刪除該鍵也只需常數時間。
最壞時間複雜度
在最壞情況下（即發生大量衝突的情況），哈希映射的時間複雜度可能會增加：

插入、查找和刪除：
最壞時間複雜度為O(n)，其中n是哈希表中的鍵值對數量。
當所有鍵都映射到相同的哈希值時（即發生嚴重衝突），哈希映射退化為鏈表，操作時間會變為線性。
